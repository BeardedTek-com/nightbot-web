networks:
  nightbot_traefik:
    external: true
  nightbot:
    external: true

services:
  nightbot-web:
    build: .
    container_name: nightbot_web
    image: nightbot-web:latest
#    ports:
#      - 5000:5000
    volumes:
      - ./data:/data
      - ./app:/flask/app
      - ./static:/flask/static
    command: /flask/start.sh
    networks:
      - nightbot_traefik
      - nightbot
    env_file:
      - path: ./env
        required: true
      - path: ./overrides.env
        required: false
    depends_on:
      - db
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=nightbot_traefik'
      - 'traefik.http.routers.nightbot-web.rule=Host(`${USERNAME:-main}.nightbot.${DOMAIN:-example.com}`)'
      - 'traefik.http.routers.nightbot-web.entryPoints=web'
      - 'traefik.http.routers.nightbot-web.service=nightbot-web-entrypoint'
      - 'traefik.http.services.nightbot-web-entrypoint.loadbalancer.server.port=5000'

  nightbot-static:
    container_name: nightbot_static
    image: nginx:alpine
    restart: always
    volumes:
      - ./static:/srv
      - ./data/static/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/static/logs:/logs
    networks:
      - nightbot_traefik
    depends_on:
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=nightbot_traefik'
      - 'traefik.http.routers.nightbot-static.rule=Host(`${USERNAME:-main}.nightbot.${DOMAIN:-example.com}`) && PathPrefix(`/img`) || PathPrefix(`/css`) || PathPrefix(`/js`)'
      - 'traefik.http.routers.nightbot-static.entryPoints=web'
      - 'traefik.http.routers.nightbot-static.service=nightbot-static-entrypoint'
      - 'traefik.http.services.nightbot-static-entrypoint.loadbalancer.server.port=80'

  db:
    container_name: nightbot_db
    hostname: nightbot_db
    image: postgres:16
    restart: always
    env_file:
      - path: ./env
        required: true
    volumes:
      - ./data/db:/data/db
    networks:
      - nightbot
  
  adminer:
    container_name: nightbot_adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - nightbot
      - nightbot_traefik
    depends_on:
      - db
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=nightbot_traefik'
      - 'traefik.http.routers.nightbot-adminer.rule=Host(`${USERNAME:-main}.nightbot.${DOMAIN:-example.com}`) && PathPrefix(`/adminer`)'
      - 'traefik.http.routers.nightbot-adminer.entryPoints=web'
      - 'traefik.http.routers.nightbot-adminer.service=nightbot-adminer-entrypoint'
      - 'traefik.http.services.nightbot-adminer-entrypoint.loadbalancer.server.port=8080'

  whoami:
    image: traefik/whoami
    networks:
      - nightbot_traefik
    deploy:
      labels:
      - traefik.enable=true
      - traefik.docker.network=nightbot_traefik
      - traefik.constraint-label=nightbot_traefik
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.whoami-http.rule=Host(`traefik.main.nightbot.jeandr.net`) && PathPrefix(`/whoami`)
      - traefik.http.routers.whoami-http.entrypoints=http
      - traefik.http.routers.whoami-http.middlewares=https-redirect
      - traefik.http.routers.whoami-https.rule=Host(`traefik.main.nightbot.jeandr.net`) && PathPrefix(`/whoami`)
      - traefik.http.routers.whoami-https.entrypoints=https
      - traefik.http.routers.whoami-https.tls=true
      - traefik.http.services.whoami.loadbalancer.server.port=80

  traefik:
    container_name: nightbot_traefik
    image: traefik:v3.0
    ports:
      - 80:80
      - 443:443
    networks:
      - nightbot_traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/letsencrypt:/letsencrypt
      - ./data/log:/var/log
    command:
      - --api.dashboard=true
      - --log.level=INFO
      # - --log.filepath=/var/log/traefik.log
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik-access.log
      - --providers.docker.network=nightbot_traefik
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.https=true
      - --entrypoints.https.address:443/tcp
      - --entryPoints.https.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/16,192.168.0.0/16,fc00::/7
      - --entryPoints.https.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/16,192.168.0.0/16,fc00::/7
      - --entryPoints.https.forwardedHeaders.insecure=false
      - --entryPoints.https.proxyProtocol.insecure=false
      - --certificatesresolvers.le.acme.email=admin@beardedtek.com
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=http
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=nightbot_traefik'
      - 'traefik.http.routers.mydashboard.rule=Host(`traefik.${USERNAME:-main}.nightbot.${DOMAIN:-example.com}`)'
      - 'traefik.http.routers.mydashboard.service=api@internal'
      - 'traefik.http.routers.mydashboard.middlewares=myauth'
      - 'traefik.http.middlewares.myauth.basicauth.users=admin:$$apr1$$yh36kr9w$$vpLPHqinbs96aO6OLon6X/'
